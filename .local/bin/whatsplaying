#!/usr/bin/env zsh

__ScriptVersion="0.1.0"

#===  FUNCTION  ================================================================
#         NAME:  usage
#  DESCRIPTION:  Display usage information.
#===============================================================================
function usage ()
{
	echo "Usage :  $0 [options] [--]

	Used to track what's playing, will output current track info to ~/.cache/whatsplaying.txt

    Options:
    -n|notify     Flag to send notification
    -p|player     Player instance to use
    -h|help       Display this message
    -v|version    Display script version"

}    # ----------  end of function usage  ----------

notify=0
signal=0
player=''

#-----------------------------------------------------------------------
#  Handle command line arguments
#-----------------------------------------------------------------------

while getopts ":hvsnp:" opt
do
  case $opt in

	h|help     )  usage; exit 0   ;;

	v|version  )  echo "$0 -- Version $__ScriptVersion"; exit 0   ;;

	n|notify   ) notify=1 ;;

	p|player   ) player="$OPTARG" ;;

	s|signal   ) signal=1 ;;

	* )  echo -e "\n  Option does not exist : $OPTARG\n"
		  usage; exit 1   ;;

  esac    # --- end of case ---
done
shift $(($OPTIND-1))

format='{{title}}|{{artist}}|{{mpris:artUrl}}'
trackinfo=$(timeout 2 playerctl --player="$player" metadata -f "$format")
exitinfo=$?
if [[ $exitinfo == 0 ]]; then
  OLDIFS=$IFS
  IFS='|' read -r -A infoarr <<< "$trackinfo"
  IFS="$OLDIFS"
  echo "${infoarr[1]} | ${infoarr[2]}" | tee ~/.cache/whatsplaying.txt
  if [[ $notify == 1 ]]; then
    if [[ $"${infoarr[3]}" != "" ]]; then
      curl "${infoarr[3]}" > /tmp/playing.png
      notify-send -i /tmp/playing.png "${infoarr[2]}" "${infoarr[1]}"
    else
      notify-send -i audio-headphones "${infoarr[2]}" "${infoarr[1]}"
    fi
  fi
fi

exit $exitinfo
